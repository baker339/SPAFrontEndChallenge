{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/ColorAutoCompleteField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\nimport { useFormikContext } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorAutoCompleteField({ ...props\n}) {\n  _s();\n\n  const formik = useFormikContext();\n  const [hintData, setHintData] = useState([\"White\", \"Yellow\", \"Blue\", \"Red\", \"Green\", \"Black\", \"Brown\", \"Azure\", \"Ivory\", \"Teal\", \"Silver\", \"Purple\", \"Navy blue\", \"Pea green\", \"Gray\", \"Orange\", \"Maroon\", \"Charcoal\", \"Aquamarine\", \"Coral\", \"Fuchsia\", \"Wheat\", \"Lime\", \"Crimson\", \"Khaki\", \"Hot pink\", \"Magenta\", \"Olden\", \"Plum\", \"Olive\", \"Cyan\"]);\n  const [text, setText] = useState(formik.values.favoriteColor = !\"\" ? formik.values.favoriteColor : \"\");\n\n  const handleOnBlur = e => {\n    formik.values.favoriteColor = e.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Hint, {\n      options: hintData,\n      allowTabFill: true,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-with-hint\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onBlur: e => handleOnBlur(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColorAutoCompleteField, \"MpA70W+hM7SIlXb8ajtp0RWLiGg=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = ColorAutoCompleteField;\nexport default ColorAutoCompleteField;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorAutoCompleteField\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/ColorAutoCompleteField.js"],"names":["React","useState","Hint","useFormikContext","ColorAutoCompleteField","props","formik","hintData","setHintData","text","setText","values","favoriteColor","handleOnBlur","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,gBAAT,QAAiC,QAAjC;;;AAEA,SAASC,sBAAT,CAAgC,EAAE,GAAGC;AAAL,CAAhC,EAA8C;AAAA;;AAC5C,QAAMC,MAAM,GAAGH,gBAAgB,EAA/B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CACvC,OADuC,EAEvC,QAFuC,EAGvC,MAHuC,EAIvC,KAJuC,EAKvC,OALuC,EAMvC,OANuC,EAOvC,OAPuC,EAQvC,OARuC,EASvC,OATuC,EAUvC,MAVuC,EAWvC,QAXuC,EAYvC,QAZuC,EAavC,WAbuC,EAcvC,WAduC,EAevC,MAfuC,EAgBvC,QAhBuC,EAiBvC,QAjBuC,EAkBvC,UAlBuC,EAmBvC,YAnBuC,EAoBvC,OApBuC,EAqBvC,SArBuC,EAsBvC,OAtBuC,EAuBvC,MAvBuC,EAwBvC,SAxBuC,EAyBvC,OAzBuC,EA0BvC,UA1BuC,EA2BvC,SA3BuC,EA4BvC,OA5BuC,EA6BvC,MA7BuC,EA8BvC,OA9BuC,EA+BvC,MA/BuC,CAAD,CAAxC;AAiCA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAC7BK,MAAM,CAACK,MAAP,CAAcC,aAAd,GAA8B,CAAC,EAAD,GAAMN,MAAM,CAACK,MAAP,CAAcC,aAApB,GAAoC,EADrC,CAAhC;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,MAAM,CAACK,MAAP,CAAcC,aAAd,GAA8BE,CAAC,CAACC,MAAF,CAASC,KAAvC;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAET,QAAf;AAAyB,MAAA,YAAY,MAArC;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAEE,IAFT;AAGE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAIE,QAAA,MAAM,EAAGF,CAAD,IAAOD,YAAY,CAACC,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvDQV,sB;UACQD,gB;;;KADRC,sB;AAyDT,eAAeA,sBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\nimport { useFormikContext } from \"formik\";\n\nfunction ColorAutoCompleteField({ ...props }) {\n  const formik = useFormikContext();\n  const [hintData, setHintData] = useState([\n    \"White\",\n    \"Yellow\",\n    \"Blue\",\n    \"Red\",\n    \"Green\",\n    \"Black\",\n    \"Brown\",\n    \"Azure\",\n    \"Ivory\",\n    \"Teal\",\n    \"Silver\",\n    \"Purple\",\n    \"Navy blue\",\n    \"Pea green\",\n    \"Gray\",\n    \"Orange\",\n    \"Maroon\",\n    \"Charcoal\",\n    \"Aquamarine\",\n    \"Coral\",\n    \"Fuchsia\",\n    \"Wheat\",\n    \"Lime\",\n    \"Crimson\",\n    \"Khaki\",\n    \"Hot pink\",\n    \"Magenta\",\n    \"Olden\",\n    \"Plum\",\n    \"Olive\",\n    \"Cyan\",\n  ]);\n  const [text, setText] = useState(\n    (formik.values.favoriteColor = !\"\" ? formik.values.favoriteColor : \"\")\n  );\n\n  const handleOnBlur = (e) => {\n    formik.values.favoriteColor = e.target.value;\n  };\n\n  return (\n    <div>\n      <Hint options={hintData} allowTabFill>\n        <input\n          className=\"input-with-hint\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onBlur={(e) => handleOnBlur(e)}\n        />\n      </Hint>\n    </div>\n  );\n}\n\nexport default ColorAutoCompleteField;\n"]},"metadata":{},"sourceType":"module"}