{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js\";\nimport React, { Component } from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class CountrySelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      countries: null\n    };\n    this.state = {\n      isShow: true\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      countries: data\n    });\n    console.log(this.state.countries);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: props.id || props.name,\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), this.state.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.name,\n        children: country.name\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: meta.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 39\n      }, this) : null]\n    }, void 0, true);\n  }\n\n}\nexport default CountrySelect;","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js"],"names":["React","Component","useField","CountrySelect","constructor","props","state","loading","countries","isShow","componentDidMount","url","response","fetch","data","json","setState","console","log","render","id","name","label","map","country","field","meta","touched","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,QAAzB;;;AAEA,OAAO,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAQnBC,KARmB,GAQX;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,SAAS,EAAE;AAFL,KARW;AAGjB,SAAKF,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAOsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAMC,GAAG,GAAG,sCAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA,SAAS,EAAEM;AAAb,KAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWE,SAAvB;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAEd,KAAK,CAACe,EAAN,IAAYf,KAAK,CAACgB,IAAlC;AAAA,kBAAyChB,KAAK,CAACiB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKhB,KAAL,CAAWE,SAAX,CAAqBe,GAArB,CAA0BC,OAAD,iBACxB;AAA2B,QAAA,KAAK,EAAEA,OAAO,CAACH,IAA1C;AAAA,kBACGG,OAAO,CAACH;AADX,SAAaG,OAAO,CAACH,IAArB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH,eAOE,uBAAYI,KAAZ;AAAA,WAAuBpB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAPF,EAQGqB,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBAA6B;AAAA,kBAAMF,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,cAA7B,GAAuD,IAR1D;AAAA,oBADF;AAYD;;AAnC0C;AAsC7C,eAAezB,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { useField } from \"formik\";\n\nexport class CountrySelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isShow: true,\n    };\n  }\n\n  state = {\n    loading: true,\n    countries: null,\n  };\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ countries: data });\n    console.log(this.state.countries);\n  }\n\n  render() {\n    return (\n      <>\n        <label htmlFor={props.id || props.name}>{props.label}</label>\n        {this.state.countries.map((country) => (\n          <option key={country.name} value={country.name}>\n            {country.name}\n          </option>\n        ))}\n        <select {...field} {...props} />\n        {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n      </>\n    );\n  }\n}\n\nexport default CountrySelect;\n"]},"metadata":{},"sourceType":"module"}