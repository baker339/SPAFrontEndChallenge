{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/CustomTextInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      style: {\n        paddingBottom: \"10px\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"text-input\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CustomTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomTextInput;\nexport default CustomTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTextInput\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/CustomTextInput.js"],"names":["React","useField","CustomTextInput","label","props","field","meta","id","name","paddingBottom","touched","error","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACG,EAAN,IAAYH,KAAK,CAACI,IAAlC;AAAwC,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAA/C;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA,SAAkCE,KAAlC;AAAA,SAA6CD;AAA7C;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGE,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAArB,gBACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,gBAA+BN,IAAI,CAACK;AAApC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAPN;AAAA,kBADF;AAWD,CAdD;;GAAMT,e;UACkBD,Q;;;KADlBC,e;AAgBN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\n\nconst CustomTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name} style={{ paddingBottom: \"10px\" }}>\n        {label}\n      </label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div style={{ color: \"red\" }}>{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nexport default CustomTextInput;\n"]},"metadata":{},"sourceType":"module"}