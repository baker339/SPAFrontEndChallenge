{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/views/CustomForm.js\";\nimport React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"../components/CustomTextInput\";\nimport CountrySelect from \"../components/CountrySelect\";\nimport ColorSelect from \"../components/ColorSelect\";\nimport { Styles } from \"../Styles\";\nimport GetCountries from \"../services/GetCountries\";\nimport PhoneRegExp from \"../models/PhoneRegex\";\nimport PhoneTextInput from \"../components/PhoneTextInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      countries: null,\n      countryCode: \"\",\n      initialValues: {\n        firstName: \"\",\n        middleName: \"\",\n        lastName: \"\",\n        country: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\",\n        favoriteColor: \"\",\n        comments: \"\"\n      },\n      initialValuesSet: false\n    };\n\n    this.setCountryCode = newCountryCode => {\n      this.setState({\n        countryCode: newCountryCode\n      });\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      countries: await GetCountries()\n    });\n    this.setInitialValues();\n  }\n\n  setInitialValues() {\n    if (this.props.submittedValues) {\n      this.setState({\n        initialValues: {\n          firstName: this.props.submittedValues.firstName,\n          middleName: this.props.submittedValues.middleName ? this.props.submittedValues.middleName : \"\",\n          lastName: this.props.submittedValues.lastName,\n          country: this.props.submittedValues.country,\n          phoneNumber: this.props.submittedValues.phoneNumber,\n          emailAddress: this.props.submittedValues.emailAddress,\n          favoriteColor: this.props.submittedValues.favoriteColor,\n          comments: this.props.submittedValues.comments ? this.props.submittedValues.comments : \"\"\n        }\n      });\n    }\n\n    if (this.props.countryCode) {\n      this.setState({\n        countryCode: this.props.countryCode\n      });\n    }\n\n    this.setState({\n      initialValuesSet: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.countries && this.state.initialValuesSet && /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: this.state.initialValues,\n          validationSchema: Yup.object({\n            firstName: Yup.string().required(\"First Name is required\"),\n            middleName: Yup.string().notRequired(),\n            lastName: Yup.string().required(\"Last Name is required\"),\n            country: Yup.string().required(\"Country is required\"),\n            phoneNumber: Yup.string().matches(PhoneRegExp, \"Phone number is not valid\").min(10, \"Phone Number must be 10 digits\").max(10, \"Phone Number must be 10 digits\").required(\"Phone Number is required\"),\n            emailAddress: Yup.string().email(\"Invalid Email Address\").required(\"Email Address is required\"),\n            favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n            comments: Yup.string().notRequired().max(200, \"Comments must be 200 characters or less\")\n          }),\n          onSubmit: (values, {\n            setSubmitting,\n            resetForm\n          }) => {\n            setTimeout(() => {\n              resetForm();\n              setSubmitting(false);\n            }, 3000);\n            this.props.submitForm();\n            this.props.submitValues(values, this.state.countryCode);\n          },\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"https://ally.com\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    width: \"50%\",\n                    height: \"50%\"\n                  },\n                  src: \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Ally_Bank_logo.svg/200px-Ally_Bank_logo.svg.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Welcome to the Ally Front End Challenge Survey!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"First Name\",\n              name: \"firstName\",\n              type: \"text\",\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Middle Name\",\n              name: \"middleName\",\n              type: \"text\",\n              placeholder: \"Middle Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              type: \"text\",\n              placeholder: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CountrySelect, {\n              label: \"Country\",\n              name: \"country\",\n              countries: this.state.countries,\n              setCountryCode: this.setCountryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PhoneTextInput, {\n              label: \"Phone Number\",\n              name: \"phoneNumber\",\n              type: \"text\",\n              placeholder: \"\",\n              countryCode: this.state.countryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Email Address\",\n              name: \"emailAddress\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ColorSelect, {\n              label: \"Favorite Color\",\n              name: \"favoriteColor\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Comments\",\n              name: \"comments\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/views/CustomForm.js"],"names":["React","Formik","Form","Yup","CustomTextInput","CountrySelect","ColorSelect","Styles","GetCountries","PhoneRegExp","PhoneTextInput","CustomForm","Component","state","loading","countries","countryCode","initialValues","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","initialValuesSet","setCountryCode","newCountryCode","setState","componentDidMount","setInitialValues","props","submittedValues","render","object","string","required","notRequired","matches","min","max","email","values","setSubmitting","resetForm","setTimeout","submitForm","submitValues","textAlign","width","height","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"../components/CustomTextInput\";\nimport CountrySelect from \"../components/CountrySelect\";\nimport ColorSelect from \"../components/ColorSelect\";\nimport { Styles } from \"../Styles\";\nimport GetCountries from \"../services/GetCountries\";\nimport PhoneRegExp from \"../models/PhoneRegex\";\nimport PhoneTextInput from \"../components/PhoneTextInput\";\n\nexport default class CustomForm extends React.Component {\n  state = {\n    loading: true,\n    countries: null,\n    countryCode: \"\",\n    initialValues: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      country: \"\",\n      phoneNumber: \"\",\n      emailAddress: \"\",\n      favoriteColor: \"\",\n      comments: \"\",\n    },\n    initialValuesSet: false,\n  };\n\n  async componentDidMount() {\n    this.setState({ countries: await GetCountries() });\n    this.setInitialValues();\n  }\n\n  setCountryCode = (newCountryCode) => {\n    this.setState({ countryCode: newCountryCode });\n  };\n\n  setInitialValues() {\n    if (this.props.submittedValues) {\n      this.setState({\n        initialValues: {\n          firstName: this.props.submittedValues.firstName,\n          middleName: this.props.submittedValues.middleName\n            ? this.props.submittedValues.middleName\n            : \"\",\n          lastName: this.props.submittedValues.lastName,\n          country: this.props.submittedValues.country,\n          phoneNumber: this.props.submittedValues.phoneNumber,\n          emailAddress: this.props.submittedValues.emailAddress,\n          favoriteColor: this.props.submittedValues.favoriteColor,\n          comments: this.props.submittedValues.comments\n            ? this.props.submittedValues.comments\n            : \"\",\n        },\n      });\n    }\n    if (this.props.countryCode) {\n      this.setState({ countryCode: this.props.countryCode });\n    }\n    this.setState({ initialValuesSet: true });\n  }\n\n  render() {\n    return (\n      <Styles>\n        <div>\n          {this.state.countries && this.state.initialValuesSet && (\n            <Formik\n              initialValues={this.state.initialValues}\n              validationSchema={Yup.object({\n                firstName: Yup.string().required(\"First Name is required\"),\n                middleName: Yup.string().notRequired(),\n                lastName: Yup.string().required(\"Last Name is required\"),\n                country: Yup.string().required(\"Country is required\"),\n                phoneNumber: Yup.string()\n                  .matches(PhoneRegExp, \"Phone number is not valid\")\n                  .min(10, \"Phone Number must be 10 digits\")\n                  .max(10, \"Phone Number must be 10 digits\")\n                  .required(\"Phone Number is required\"),\n                emailAddress: Yup.string()\n                  .email(\"Invalid Email Address\")\n                  .required(\"Email Address is required\"),\n                favoriteColor: Yup.string().required(\n                  \"Favorite Color is required\"\n                ),\n                comments: Yup.string()\n                  .notRequired()\n                  .max(200, \"Comments must be 200 characters or less\"),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                  resetForm();\n                  setSubmitting(false);\n                }, 3000);\n                this.props.submitForm();\n                this.props.submitValues(values, this.state.countryCode);\n              }}\n            >\n              {(props) => (\n                <Form>\n                  <span style={{ textAlign: \"center\" }}>\n                    <a href=\"https://ally.com\">\n                      <img\n                        style={{ width: \"50%\", height: \"50%\" }}\n                        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/86/Ally_Bank_logo.svg/200px-Ally_Bank_logo.svg.png\"\n                      />\n                    </a>\n                  </span>\n                  <h1>Welcome to the Ally Front End Challenge Survey!</h1>\n                  <CustomTextInput\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Middle Name\"\n                    name=\"middleName\"\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                  />\n                  <br />\n                  <CountrySelect\n                    label=\"Country\"\n                    name=\"country\"\n                    countries={this.state.countries}\n                    setCountryCode={this.setCountryCode}\n                  />\n                  <br />\n                  <PhoneTextInput\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    type=\"text\"\n                    placeholder=\"\"\n                    countryCode={this.state.countryCode}\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Email Address\"\n                    name=\"emailAddress\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <ColorSelect\n                    label=\"Favorite Color\"\n                    name=\"favoriteColor\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Comments\"\n                    name=\"comments\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <button type=\"submit\">\n                    {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          )}\n        </div>\n      </Styles>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}