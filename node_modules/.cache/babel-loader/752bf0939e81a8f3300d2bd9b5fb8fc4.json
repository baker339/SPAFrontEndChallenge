{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/ColorSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as _ from \"underscore\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ColorSelect = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  const onSelectColor = event => {\n    setSelectedColor(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const colors = [\"Red\", \"Orange\", \"Yellow\", \"Green\", \"Blue\", \"Purple\", \"Pink\", \"None\", \"Other\"];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onSelectColor,\n      value: selectedColor,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), colors.map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: color,\n        children: color\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedColor == \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 36\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(ColorSelect, \"3QbWiQT7h20G6YEi+OFDOPCsVwE=\", false, function () {\n  return [useField];\n});\n\n_c = ColorSelect;\nexport default ColorSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorSelect\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/ColorSelect.js"],"names":["React","useState","_","useField","ColorSelect","label","props","field","meta","selectedColor","setSelectedColor","onSelectColor","event","target","value","console","log","colors","id","name","map","color","touched","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;AAEA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC3C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AAEA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMU,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,gBAAgB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACD,GAHD;;AAKA,QAAMG,MAAM,GAAG,CACb,KADa,EAEb,QAFa,EAGb,QAHa,EAIb,OAJa,EAKb,MALa,EAMb,QANa,EAOb,MAPa,EAQb,MARa,EASb,OATa,CAAf;AAYA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEX,KAAK,CAACY,EAAN,IAAYZ,KAAK,CAACa,IAAlC;AAAA,gBAAyCd;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,QAAQ,EAAEM,aAAlB;AAAiC,MAAA,KAAK,EAAEF,aAAxC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGQ,MAAM,CAACG,GAAP,CAAYC,KAAD,iBACV;AAAoB,QAAA,KAAK,EAAEA,KAA3B;AAAA,kBACGA;AADH,SAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAUGZ,aAAa,IAAI,OAAjB,iBAA4B;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAV/B,EAWGD,IAAI,CAACc,OAAL,IAAgBd,IAAI,CAACe,KAArB,gBAA6B;AAAA,gBAAMf,IAAI,CAACe;AAAX;AAAA;AAAA;AAAA;AAAA,YAA7B,GAAuD,IAX1D;AAAA,kBADF;AAeD,CArCD;;GAAMnB,W;UACkBD,Q;;;KADlBC,W;AAuCN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as _ from \"underscore\";\n\nimport { useField } from \"formik\";\n\nconst ColorSelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const [selectedColor, setSelectedColor] = useState(null);\n\n  const onSelectColor = (event) => {\n    setSelectedColor(event.target.value);\n    console.log(event.target.value);\n  };\n\n  const colors = [\n    \"Red\",\n    \"Orange\",\n    \"Yellow\",\n    \"Green\",\n    \"Blue\",\n    \"Purple\",\n    \"Pink\",\n    \"None\",\n    \"Other\",\n  ];\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select onChange={onSelectColor} value={selectedColor}>\n        <option>Select Color</option>\n        {colors.map((color) => (\n          <option key={color} value={color}>\n            {color}\n          </option>\n        ))}\n      </select>\n      {selectedColor == \"Other\" && <input type=\"text\" />}\n      {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n    </>\n  );\n};\n\nexport default ColorSelect;\n"]},"metadata":{},"sourceType":"module"}