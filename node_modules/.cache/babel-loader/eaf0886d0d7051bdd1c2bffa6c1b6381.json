{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/Form.js\";\nimport React from \"react\";\nimport NameField from \"./FormFields/NameField\";\nimport { Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { string } from \"yup/lib/locale\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomTextInput = ({\n  label,\n  ...props\n}) => {};\n\n_c = CustomTextInput;\n\nconst Form = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here is a form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        country: '',\n        phoneNumber: null,\n        emailAddress: '',\n        favoriteColor: '',\n        comments: ''\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().required(\"First Name is required\"),\n        middleName: Yup.string().notRequired(),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        country: Yup.string().country().required(\"Country is required\"),\n        phoneNumber: Yup.number().phoneNumber(\"Invalid Phone Number\").required(\"Phone Number is required\"),\n        emailAddress: Yup.string().email(\"Invalid Email Address\"),\n        favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n        comments: Yup.string().notRequired()\n      }),\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 3000);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Form;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTextInput\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/Form.js"],"names":["React","NameField","Formik","useField","Yup","string","CustomTextInput","label","props","Form","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","object","required","notRequired","number","email","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,QAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB,CAEhD,CAFD;;KAAMF,e;;AAIN,MAAMG,IAAI,GAAG,MAAM;AACjB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEM,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAFN,eAGM,QAAC,MAAD;AACI,MAAA,aAAa,EAAE;AACXC,QAAAA,SAAS,EAAC,EADC;AAEXC,QAAAA,UAAU,EAAC,EAFA;AAGXC,QAAAA,QAAQ,EAAC,EAHE;AAIXC,QAAAA,OAAO,EAAC,EAJG;AAKXC,QAAAA,WAAW,EAAC,IALD;AAMXC,QAAAA,YAAY,EAAC,EANF;AAOXC,QAAAA,aAAa,EAAC,EAPH;AAQXC,QAAAA,QAAQ,EAAC;AARE,OADnB;AAWI,MAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,CAAW;AACzBR,QAAAA,SAAS,EAAEN,GAAG,CAACC,MAAJ,GACRc,QADQ,CACC,wBADD,CADc;AAGzBR,QAAAA,UAAU,EAAEP,GAAG,CAACC,MAAJ,GACTe,WADS,EAHa;AAKzBR,QAAAA,QAAQ,EAAER,GAAG,CAACC,MAAJ,GACPc,QADO,CACE,uBADF,CALe;AAOzBN,QAAAA,OAAO,EAAET,GAAG,CAACC,MAAJ,GACJQ,OADI,GAENM,QAFM,CAEG,qBAFH,CAPgB;AAUzBL,QAAAA,WAAW,EAAEV,GAAG,CAACiB,MAAJ,GACRP,WADQ,CACI,sBADJ,EAERK,QAFQ,CAEC,0BAFD,CAVY;AAazBJ,QAAAA,YAAY,EAAEX,GAAG,CAACC,MAAJ,GACTiB,KADS,CACH,uBADG,CAbW;AAezBN,QAAAA,aAAa,EAAEZ,GAAG,CAACC,MAAJ,GACVc,QADU,CACD,4BADC,CAfU;AAiBzBF,QAAAA,QAAQ,EAAEb,GAAG,CAACC,MAAJ,GACTe,WADS;AAjBe,OAAX,CAXtB;AA+BI,MAAA,QAAQ,EAAE,CAACG,MAAD,EAAS;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAT,KAA0C;AAChDC,QAAAA,UAAU,CAAC,MAAM;AACbC,UAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeN,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAE,UAAAA,SAAS;AACTD,UAAAA,aAAa,CAAC,KAAD,CAAb;AACH,SAJS,EAIP,IAJO,CAAV;AAKH;AArCL;AAAA;AAAA;AAAA;AAAA,YAHN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAhDD;;MAAMf,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport NameField from \"./FormFields/NameField\";\nimport { Formik, useField } from \"formik\";\nimport * as Yup from \"yup\";\nimport { string } from \"yup/lib/locale\";\n\nconst CustomTextInput = ({ label, ...props }) => {\n\n}\n\nconst Form = () => {\n  return (\n    <div>\n      <h1>Here is a form</h1>\n          <NameField />\n          <Formik\n              initialValues={{\n                  firstName:'',\n                  middleName:'',\n                  lastName:'',\n                  country:'',\n                  phoneNumber:null,\n                  emailAddress:'',\n                  favoriteColor:'',\n                  comments:''\n              }}\n              validationSchema={Yup.object({\n                  firstName: Yup.string()\n                    .required(\"First Name is required\"),\n                  middleName: Yup.string()\n                    .notRequired(),\n                  lastName: Yup.string()\n                    .required(\"Last Name is required\"),\n                  country: Yup.string()\n                      .country()\n                    .required(\"Country is required\"),\n                  phoneNumber: Yup.number()\n                      .phoneNumber(\"Invalid Phone Number\")\n                      .required(\"Phone Number is required\"),\n                  emailAddress: Yup.string()\n                      .email(\"Invalid Email Address\"),\n                  favoriteColor: Yup.string()\n                      .required(\"Favorite Color is required\"),\n                  comments: Yup.string()\n                  .notRequired()\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      resetForm();\n                      setSubmitting(false);\n                  }, 3000)\n              }}\n          >\n\n          </Formik>\n    </div>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}