{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js\";\nimport React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\";\nimport { Styles } from \"../../Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst CustomForm = () => {\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here is a form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NameField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: \"\",\n          middleName: \"\",\n          lastName: \"\",\n          country: \"\",\n          phoneNumber: \"\",\n          emailAddress: \"\",\n          favoriteColor: \"\",\n          comments: \"\"\n        },\n        validationSchema: Yup.object({\n          firstName: Yup.string().required(\"First Name is required\"),\n          middleName: Yup.string().notRequired(),\n          lastName: Yup.string().required(\"Last Name is required\"),\n          country: Yup.string().required(\"Country is required\").oneOf([\"America\"]),\n          phoneNumber: Yup.string().matches(phoneRegExp, \"Phone number is not valid\").required(\"Phone Number is required\"),\n          emailAddress: Yup.string().email(\"Invalid Email Address\"),\n          favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n          comments: Yup.string().notRequired()\n        }),\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 3000);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Here's a Form!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\",\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Middle Name\",\n            name: \"middleName\",\n            type: \"text\",\n            placeholder: \"Middle Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            type: \"text\",\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            label: \"Country\",\n            name: \"country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Phone Number\",\n            name: \"phoneNumber\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Email Address\",\n            name: \"emailAddress\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Favorite Color\",\n            name: \"favoriteColor\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Comments\",\n            name: \"comments\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js"],"names":["React","NameField","Formik","Form","Yup","CustomTextInput","CustomSelect","Styles","phoneRegExp","CustomForm","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","object","string","required","notRequired","oneOf","matches","email","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","props","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\";\nimport { Styles } from \"../../Styles\";\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst CustomForm = () => {\n  return (\n    <Styles>\n      <div>\n        <h1>Here is a form</h1>\n        <NameField />\n        <Formik\n          initialValues={{\n            firstName: \"\",\n            middleName: \"\",\n            lastName: \"\",\n            country: \"\",\n            phoneNumber: \"\",\n            emailAddress: \"\",\n            favoriteColor: \"\",\n            comments: \"\",\n          }}\n          validationSchema={Yup.object({\n            firstName: Yup.string().required(\"First Name is required\"),\n            middleName: Yup.string().notRequired(),\n            lastName: Yup.string().required(\"Last Name is required\"),\n            country: Yup.string()\n              .required(\"Country is required\")\n              .oneOf([\"America\"]),\n            phoneNumber: Yup.string()\n              .matches(phoneRegExp, \"Phone number is not valid\")\n              .required(\"Phone Number is required\"),\n            emailAddress: Yup.string().email(\"Invalid Email Address\"),\n            favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n            comments: Yup.string().notRequired(),\n          })}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              resetForm();\n              setSubmitting(false);\n            }, 3000);\n          }}\n        >\n          {(props) => (\n            <Form>\n              <h1>Here's a Form!</h1>\n              <CustomTextInput\n                label=\"First Name\"\n                name=\"firstName\"\n                type=\"text\"\n                placeholder=\"First Name\"\n              />\n              <br />\n              <CustomTextInput\n                label=\"Middle Name\"\n                name=\"middleName\"\n                type=\"text\"\n                placeholder=\"Middle Name\"\n              />\n              <br />\n              <CustomTextInput\n                label=\"Last Name\"\n                name=\"lastName\"\n                type=\"text\"\n                placeholder=\"Last Name\"\n              />\n              <br />\n              <CustomSelect label=\"Country\" name=\"country\" />\n              <br />\n              <CustomTextInput\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"\"\n              />\n              <br />\n              <CustomTextInput\n                label=\"Email Address\"\n                name=\"emailAddress\"\n                type=\"text\"\n                placeholder=\"\"\n              />\n              <br />\n              <CustomTextInput\n                label=\"Favorite Color\"\n                name=\"favoriteColor\"\n                type=\"text\"\n                placeholder=\"\"\n              />\n              <br />\n              <CustomTextInput\n                label=\"Comments\"\n                name=\"comments\"\n                type=\"text\"\n                placeholder=\"\"\n              />\n              <br />\n              <button type=\"submit\">\n                {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Styles>\n  );\n};\n\nexport default CustomForm;\n"]},"metadata":{},"sourceType":"module"}