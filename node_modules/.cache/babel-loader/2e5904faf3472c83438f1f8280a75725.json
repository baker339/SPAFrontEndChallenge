{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js\";\nimport React, { Component } from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountrySelect = ({\n  label,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), this.state.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: country.name,\n      children: country.name\n    }, country.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 37\n    }, this) : null]\n  }, void 0, true);\n};\n\n_c = CountrySelect;\nexport default CountrySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js"],"names":["React","Component","useField","CountrySelect","label","props","id","name","state","countries","map","country","field","meta","touched","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAC7C,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEA,KAAK,CAACC,EAAN,IAAYD,KAAK,CAACE,IAAlC;AAAA,gBAAyCH;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,KAAKI,KAAL,CAAWC,SAAX,CAAqBC,GAArB,CAA0BC,OAAD,iBACxB;AAA2B,MAAA,KAAK,EAAEA,OAAO,CAACJ,IAA1C;AAAA,gBACGI,OAAO,CAACJ;AADX,OAAaI,OAAO,CAACJ,IAArB;AAAA;AAAA;AAAA;AAAA,YADD,CAFH,eAOE,uBAAYK,KAAZ;AAAA,SAAuBP;AAAvB;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGQ,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAArB,gBAA6B;AAAA,gBAAMF,IAAI,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,YAA7B,GAAuD,IAR1D;AAAA,kBADF;AAYD,CAbD;;KAAMZ,a;AAeN,eAAeA,aAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { useField } from \"formik\";\n\nconst CountrySelect = ({ label, ...props }) => {\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      {this.state.countries.map((country) => (\n        <option key={country.name} value={country.name}>\n          {country.name}\n        </option>\n      ))}\n      <select {...field} {...props} />\n      {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n    </>\n  );\n};\n\nexport default CountrySelect;\n"]},"metadata":{},"sourceType":"module"}