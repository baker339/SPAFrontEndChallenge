{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as _ from \"underscore\";\nimport CustomSelect from \"./CustomSelect\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountrySelect = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedFlag, setSelectedFlag] = useState(null);\n\n  const onSelectCountry = country => {\n    console.log(country);\n    setSelectedCountry(country);\n    setSelectedFlag(_.where(props.countries, {\n      name: country\n    })[0].flag);\n    props.setCountryCode({\n      countryCode: _.where(props.countries, {\n        name: country\n      })[0].callingCodes\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n      label: label,\n      name: \"country\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"Select Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), props.countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country.name,\n        onClick: () => {\n          onSelectCountry(country.name);\n        },\n        children: country.name\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 37\n    }, this) : null, selectedFlag && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: selectedFlag,\n      alt: selectedCountry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountrySelect, \"5dIOovtAJBwwWPCbCAFxyinOfbw=\", false, function () {\n  return [useField];\n});\n\n_c = CountrySelect;\nexport default CountrySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountrySelect\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CountrySelect.js"],"names":["React","useState","_","CustomSelect","useField","CountrySelect","label","props","field","meta","selectedCountry","setSelectedCountry","selectedFlag","setSelectedFlag","onSelectCountry","country","console","log","where","countries","name","flag","setCountryCode","countryCode","callingCodes","id","map","touched","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,CAAZ,MAAmB,YAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC7C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AAEA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,IAAD,CAAtD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMa,eAAe,GAAIC,OAAD,IAAa;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAJ,IAAAA,kBAAkB,CAACI,OAAD,CAAlB;AACAF,IAAAA,eAAe,CAACX,CAAC,CAACgB,KAAF,CAAQX,KAAK,CAACY,SAAd,EAAyB;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAzB,EAA4C,CAA5C,EAA+CM,IAAhD,CAAf;AACAd,IAAAA,KAAK,CAACe,cAAN,CAAqB;AACnBC,MAAAA,WAAW,EAAErB,CAAC,CAACgB,KAAF,CAAQX,KAAK,CAACY,SAAd,EAAyB;AAAEC,QAAAA,IAAI,EAAEL;AAAR,OAAzB,EAA4C,CAA5C,EAA+CS;AADzC,KAArB;AAGD,GAPD;;AASA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEjB,KAAK,CAACkB,EAAN,IAAYlB,KAAK,CAACa,IAAlC;AAAA,gBAAyCd;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,IAAI,EAAC,SAAjC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,KAAK,CAACY,SAAN,CAAgBO,GAAhB,CAAqBX,OAAD,iBACnB;AAEE,QAAA,KAAK,EAAEA,OAAO,CAACK,IAFjB;AAGE,QAAA,OAAO,EAAE,MAAM;AACbN,UAAAA,eAAe,CAACC,OAAO,CAACK,IAAT,CAAf;AACD,SALH;AAAA,kBAOGL,OAAO,CAACK;AAPX,SACOL,OAAO,CAACK,IADf;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EAuBGX,IAAI,CAACkB,OAAL,IAAgBlB,IAAI,CAACmB,KAArB,gBAA6B;AAAA,gBAAMnB,IAAI,CAACmB;AAAX;AAAA;AAAA;AAAA;AAAA,YAA7B,GAAuD,IAvB1D,EAwBGhB,YAAY,iBAAI;AAAK,MAAA,GAAG,EAAEA,YAAV;AAAwB,MAAA,GAAG,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YAxBnB;AAAA,kBADF;AA4BD,CA3CD;;GAAML,a;UACkBD,Q;;;KADlBC,a;AA6CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as _ from \"underscore\";\nimport CustomSelect from \"./CustomSelect\";\n\nimport { useField } from \"formik\";\n\nconst CountrySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedFlag, setSelectedFlag] = useState(null);\n\n  const onSelectCountry = (country) => {\n    console.log(country);\n    setSelectedCountry(country);\n    setSelectedFlag(_.where(props.countries, { name: country })[0].flag);\n    props.setCountryCode({\n      countryCode: _.where(props.countries, { name: country })[0].callingCodes,\n    });\n  };\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      {/* <select\n        {...field}\n        {...props}\n        onChange={onSelectCountry}\n        value={selectedCountry}\n      > */}\n      <CustomSelect label={label} name=\"country\">\n        <option>Select Country</option>\n        {props.countries.map((country) => (\n          <option\n            key={country.name}\n            value={country.name}\n            onClick={() => {\n              onSelectCountry(country.name);\n            }}\n          >\n            {country.name}\n          </option>\n        ))}\n      </CustomSelect>\n      {/* </select> */}\n      {meta.touched && meta.error ? <div>{meta.error}</div> : null}\n      {selectedFlag && <img src={selectedFlag} alt={selectedCountry} />}\n    </>\n  );\n};\n\nexport default CountrySelect;\n"]},"metadata":{},"sourceType":"module"}