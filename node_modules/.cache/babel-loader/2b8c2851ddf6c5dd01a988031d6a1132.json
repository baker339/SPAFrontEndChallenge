{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CountrySelect from \"./FormComponents/CountrySelect\";\nimport { Styles } from \"../../Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport default class CustomForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      countries: null,\n      countryCode: null,\n      initialValues: {\n        firstName: \"\",\n        middleName: \"\",\n        lastName: \"\",\n        country: \"\",\n        phoneNumber: \"\",\n        emailAddress: \"\",\n        favoriteColor: \"\",\n        comments: \"\"\n      }\n    };\n\n    this.setCountryCode = newCountryCode => {\n      this.setState({\n        newCountryCode\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      countries: data\n    }); // this.setState({ submittedValues: this.props.submittedValues });\n    // console.log(this.props.submittedValues);\n    // console.log(this.state.submittedValues);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.countries && /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: this.state.initialValues,\n          validationSchema: Yup.object({\n            firstName: Yup.string(),\n            //   .required(\"First Name is required\"),\n            middleName: Yup.string().notRequired(),\n            lastName: Yup.string(),\n            //   .required(\"Last Name is required\"),\n            country: Yup.string(),\n            //   .required(\"Country is required\"),\n            phoneNumber: Yup.string().matches(phoneRegExp, \"Phone number is not valid\"),\n            //   .required(\"Phone Number is required\"),\n            emailAddress: Yup.string().email(\"Invalid Email Address\"),\n            //   .required(\"Email Address is required\"),\n            favoriteColor: Yup.string(),\n            //   .required(\"Favorite Color is required\"),\n            comments: Yup.string().notRequired()\n          }),\n          onSubmit: (values, {\n            setSubmitting,\n            resetForm\n          }) => {\n            setTimeout(() => {\n              //   alert(JSON.stringify(values, null, 2));\n              //   resetForm();\n              setSubmitting(false);\n            }, 3000);\n            this.props.submitForm();\n            this.props.submitValues(values);\n          },\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Here's a Form!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"First Name\",\n              name: \"firstName\",\n              type: \"text\",\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Middle Name\",\n              name: \"middleName\",\n              type: \"text\",\n              placeholder: \"Middle Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              type: \"text\",\n              placeholder: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CountrySelect, {\n              label: \"Country\",\n              name: \"country\",\n              countries: this.state.countries,\n              setCountryCode: this.setCountryCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Phone Number\",\n              name: \"phoneNumber\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Email Address\",\n              name: \"emailAddress\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Favorite Color\",\n              name: \"favoriteColor\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Comments\",\n              name: \"comments\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js"],"names":["React","useEffect","useState","Formik","Form","Yup","CustomTextInput","CountrySelect","Styles","phoneRegExp","CustomForm","Component","constructor","props","state","loading","countries","countryCode","initialValues","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","setCountryCode","newCountryCode","setState","componentDidMount","url","response","fetch","data","json","render","object","string","notRequired","matches","email","values","setSubmitting","resetForm","setTimeout","submitForm","submitValues","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CountrySelect from \"./FormComponents/CountrySelect\";\nimport { Styles } from \"../../Styles\";\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport default class CustomForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    loading: true,\n    countries: null,\n    countryCode: null,\n    initialValues: {\n      firstName: \"\",\n      middleName: \"\",\n      lastName: \"\",\n      country: \"\",\n      phoneNumber: \"\",\n      emailAddress: \"\",\n      favoriteColor: \"\",\n      comments: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ countries: data });\n\n    // this.setState({ submittedValues: this.props.submittedValues });\n    // console.log(this.props.submittedValues);\n    // console.log(this.state.submittedValues);\n  }\n\n  setCountryCode = (newCountryCode) => {\n    this.setState({ newCountryCode });\n  };\n\n  render() {\n    return (\n      <Styles>\n        <div>\n          {this.state.countries && (\n            <Formik\n              initialValues={this.state.initialValues}\n              validationSchema={Yup.object({\n                firstName: Yup.string(),\n                //   .required(\"First Name is required\"),\n                middleName: Yup.string().notRequired(),\n                lastName: Yup.string(),\n                //   .required(\"Last Name is required\"),\n                country: Yup.string(),\n                //   .required(\"Country is required\"),\n                phoneNumber: Yup.string().matches(\n                  phoneRegExp,\n                  \"Phone number is not valid\"\n                ),\n                //   .required(\"Phone Number is required\"),\n                emailAddress: Yup.string().email(\"Invalid Email Address\"),\n                //   .required(\"Email Address is required\"),\n                favoriteColor: Yup.string(),\n                //   .required(\"Favorite Color is required\"),\n                comments: Yup.string().notRequired(),\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                  //   alert(JSON.stringify(values, null, 2));\n                  //   resetForm();\n                  setSubmitting(false);\n                }, 3000);\n                this.props.submitForm();\n                this.props.submitValues(values);\n              }}\n            >\n              {(props) => (\n                <Form>\n                  <h1>Here's a Form!</h1>\n                  <CustomTextInput\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    placeholder=\"First Name\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Middle Name\"\n                    name=\"middleName\"\n                    type=\"text\"\n                    placeholder=\"Middle Name\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    placeholder=\"Last Name\"\n                  />\n                  <br />\n                  <CountrySelect\n                    label=\"Country\"\n                    name=\"country\"\n                    countries={this.state.countries}\n                    setCountryCode={this.setCountryCode}\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Email Address\"\n                    name=\"emailAddress\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Favorite Color\"\n                    name=\"favoriteColor\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <CustomTextInput\n                    label=\"Comments\"\n                    name=\"comments\"\n                    type=\"text\"\n                    placeholder=\"\"\n                  />\n                  <br />\n                  <button type=\"submit\">\n                    {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                  </button>\n                </Form>\n              )}\n            </Formik>\n          )}\n        </div>\n      </Styles>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}