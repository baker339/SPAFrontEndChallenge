{"ast":null,"code":"import _slicedToArray from\"/Users/aidanbaker/Desktop/spa-frontend-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Hint}from\"react-autocomplete-hint\";import{useFormikContext}from\"formik\";import AutofillColors from\"../models/AutofillColors\";import{jsx as _jsx}from\"react/jsx-runtime\";function ColorAutoCompleteField(_ref){var props=Object.assign({},_ref);var formik=useFormikContext();var _useState=useState(AutofillColors),_useState2=_slicedToArray(_useState,2),hintData=_useState2[0],setHintData=_useState2[1];var _useState3=useState(formik.values.favoriteColor===\"\"?formik.values.favoriteColor:\"\"),_useState4=_slicedToArray(_useState3,2),text=_useState4[0],setText=_useState4[1];var handleOnBlur=function handleOnBlur(e){formik.values.favoriteColor=e.target.value;};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Hint,{options:hintData,allowTabFill:true,children:/*#__PURE__*/_jsx(\"input\",{className:\"input-with-hint\",value:text,onChange:function onChange(e){return setText(e.target.value);},onBlur:function onBlur(e){return handleOnBlur(e);}})})});}export default ColorAutoCompleteField;","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/ColorAutoCompleteField.js"],"names":["React","useState","Hint","useFormikContext","AutofillColors","ColorAutoCompleteField","props","formik","hintData","setHintData","values","favoriteColor","text","setText","handleOnBlur","e","target","value"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,yBAArB,CACA,OAASC,gBAAT,KAAiC,QAAjC,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,C,2CAEA,QAASC,CAAAA,sBAAT,MAA8C,IAATC,CAAAA,KAAS,wBAC5C,GAAMC,CAAAA,MAAM,CAAGJ,gBAAgB,EAA/B,CAD4C,cAEZF,QAAQ,CAACG,cAAD,CAFI,wCAErCI,QAFqC,eAE3BC,WAF2B,8BAGpBR,QAAQ,CAC9BM,MAAM,CAACG,MAAP,CAAcC,aAAd,GAAgC,EAAhC,CAAqCJ,MAAM,CAACG,MAAP,CAAcC,aAAnD,CAAmE,EADrC,CAHY,yCAGrCC,IAHqC,eAG/BC,OAH+B,eAO5C,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CAC1BR,MAAM,CAACG,MAAP,CAAcC,aAAd,CAA8BI,CAAC,CAACC,MAAF,CAASC,KAAvC,CACD,CAFD,CAIA,mBACE,kCACE,KAAC,IAAD,EAAM,OAAO,CAAET,QAAf,CAAyB,YAAY,KAArC,uBACE,cACE,SAAS,CAAC,iBADZ,CAEE,KAAK,CAAEI,IAFT,CAGE,QAAQ,CAAE,kBAACG,CAAD,QAAOF,CAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAHZ,CAIE,MAAM,CAAE,gBAACF,CAAD,QAAOD,CAAAA,YAAY,CAACC,CAAD,CAAnB,EAJV,EADF,EADF,EADF,CAYD,CAED,cAAeV,CAAAA,sBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\nimport { useFormikContext } from \"formik\";\nimport AutofillColors from \"../models/AutofillColors\";\n\nfunction ColorAutoCompleteField({ ...props }) {\n  const formik = useFormikContext();\n  const [hintData, setHintData] = useState(AutofillColors);\n  const [text, setText] = useState(\n    formik.values.favoriteColor === \"\" ? formik.values.favoriteColor : \"\"\n  );\n\n  const handleOnBlur = (e) => {\n    formik.values.favoriteColor = e.target.value;\n  };\n\n  return (\n    <div>\n      <Hint options={hintData} allowTabFill>\n        <input\n          className=\"input-with-hint\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onBlur={(e) => handleOnBlur(e)}\n        />\n      </Hint>\n    </div>\n  );\n}\n\nexport default ColorAutoCompleteField;\n"]},"metadata":{},"sourceType":"module"}