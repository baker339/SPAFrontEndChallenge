{"ast":null,"code":"import _objectSpread from\"/Users/aidanbaker/Desktop/spa-frontend-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/aidanbaker/Desktop/spa-frontend-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/aidanbaker/Desktop/spa-frontend-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState}from\"react\";import*as _ from\"underscore\";import{useField,useFormikContext}from\"formik\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CountrySelect=function CountrySelect(_ref){var label=_ref.label,props=_objectWithoutProperties(_ref,[\"label\"]);var _useField=useField(props),_useField2=_slicedToArray(_useField,2),field=_useField2[0],meta=_useField2[1];var formik=useFormikContext();var _useState=useState(formik.values.country!==\"\"?formik.values.country:null),_useState2=_slicedToArray(_useState,2),selectedCountry=_useState2[0],setSelectedCountry=_useState2[1];var _useState3=useState(formik.values.country!==\"\"?_.where(props.countries,{name:formik.values.country})[0].flag:null),_useState4=_slicedToArray(_useState3,2),selectedFlag=_useState4[0],setSelectedFlag=_useState4[1];var onSelectCountry=function onSelectCountry(event){if(event.target.value!==\"\"){setSelectedCountry(event.target.value);setSelectedFlag(_.where(props.countries,{name:event.target.value})[0].flag);props.setCountryCode({countryCode:_.where(props.countries,{name:event.target.value})[0].callingCodes});formik.values.country=event.target.value;}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:props.id||props.name,children:label}),/*#__PURE__*/_jsxs(\"select\",_objectSpread(_objectSpread(_objectSpread({},field),props),{},{onChange:onSelectCountry,value:selectedCountry,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Country\"}),props.countries.map(function(country){return/*#__PURE__*/_jsx(\"option\",{value:country.name,children:country.name},country.name);})]})),meta.touched&&meta.error?/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:meta.error}):null,selectedFlag&&/*#__PURE__*/_jsx(\"img\",{src:selectedFlag,alt:selectedCountry})]});};export default CountrySelect;","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/CountrySelect.js"],"names":["React","useState","_","useField","useFormikContext","CountrySelect","label","props","field","meta","formik","values","country","selectedCountry","setSelectedCountry","where","countries","name","flag","selectedFlag","setSelectedFlag","onSelectCountry","event","target","value","setCountryCode","countryCode","callingCodes","id","map","touched","error","color"],"mappings":"wgBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,GAAKC,CAAAA,CAAZ,KAAmB,YAAnB,CAEA,OAASC,QAAT,CAAmBC,gBAAnB,KAA2C,QAA3C,C,6IAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBC,CAAAA,KAAsB,MAAtBA,KAAsB,CAAZC,KAAY,wDACvBJ,QAAQ,CAACI,KAAD,CADe,wCACtCC,KADsC,eAC/BC,IAD+B,eAE7C,GAAMC,CAAAA,MAAM,CAAGN,gBAAgB,EAA/B,CAF6C,cAICH,QAAQ,CACpDS,MAAM,CAACC,MAAP,CAAcC,OAAd,GAA0B,EAA1B,CAA+BF,MAAM,CAACC,MAAP,CAAcC,OAA7C,CAAuD,IADH,CAJT,wCAItCC,eAJsC,eAIrBC,kBAJqB,8BAOLb,QAAQ,CAC9CS,MAAM,CAACC,MAAP,CAAcC,OAAd,GAA0B,EAA1B,CACIV,CAAC,CAACa,KAAF,CAAQR,KAAK,CAACS,SAAd,CAAyB,CAAEC,IAAI,CAAEP,MAAM,CAACC,MAAP,CAAcC,OAAtB,CAAzB,EAA0D,CAA1D,EAA6DM,IADjE,CAEI,IAH0C,CAPH,yCAOtCC,YAPsC,eAOxBC,eAPwB,eAa7C,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CACjC,GAAIA,KAAK,CAACC,MAAN,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC7BV,kBAAkB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB,CACAJ,eAAe,CACblB,CAAC,CAACa,KAAF,CAAQR,KAAK,CAACS,SAAd,CAAyB,CAAEC,IAAI,CAAEK,KAAK,CAACC,MAAN,CAAaC,KAArB,CAAzB,EAAuD,CAAvD,EAA0DN,IAD7C,CAAf,CAGAX,KAAK,CAACkB,cAAN,CAAqB,CACnBC,WAAW,CAAExB,CAAC,CAACa,KAAF,CAAQR,KAAK,CAACS,SAAd,CAAyB,CAAEC,IAAI,CAAEK,KAAK,CAACC,MAAN,CAAaC,KAArB,CAAzB,EAAuD,CAAvD,EACVG,YAFgB,CAArB,EAIAjB,MAAM,CAACC,MAAP,CAAcC,OAAd,CAAwBU,KAAK,CAACC,MAAN,CAAaC,KAArC,CACD,CACF,CAZD,CAcA,mBACE,wCACE,cAAO,OAAO,CAAEjB,KAAK,CAACqB,EAAN,EAAYrB,KAAK,CAACU,IAAlC,UAAyCX,KAAzC,EADF,cAEE,4DACME,KADN,EAEMD,KAFN,MAGE,QAAQ,CAAEc,eAHZ,CAIE,KAAK,CAAER,eAJT,wBAME,eAAQ,KAAK,CAAC,EAAd,4BANF,CAOGN,KAAK,CAACS,SAAN,CAAgBa,GAAhB,CAAoB,SAACjB,OAAD,qBACnB,eAA2B,KAAK,CAAEA,OAAO,CAACK,IAA1C,UACGL,OAAO,CAACK,IADX,EAAaL,OAAO,CAACK,IAArB,CADmB,EAApB,CAPH,IAFF,CAeGR,IAAI,CAACqB,OAAL,EAAgBrB,IAAI,CAACsB,KAArB,cACC,YAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAZ,UAA+BvB,IAAI,CAACsB,KAApC,EADD,CAEG,IAjBN,CAkBGZ,YAAY,eAAI,YAAK,GAAG,CAAEA,YAAV,CAAwB,GAAG,CAAEN,eAA7B,EAlBnB,GADF,CAsBD,CAjDD,CAmDA,cAAeR,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport * as _ from \"underscore\";\n\nimport { useField, useFormikContext } from \"formik\";\n\nconst CountrySelect = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  const formik = useFormikContext();\n\n  const [selectedCountry, setSelectedCountry] = useState(\n    formik.values.country !== \"\" ? formik.values.country : null\n  );\n  const [selectedFlag, setSelectedFlag] = useState(\n    formik.values.country !== \"\"\n      ? _.where(props.countries, { name: formik.values.country })[0].flag\n      : null\n  );\n\n  const onSelectCountry = (event) => {\n    if (event.target.value !== \"\") {\n      setSelectedCountry(event.target.value);\n      setSelectedFlag(\n        _.where(props.countries, { name: event.target.value })[0].flag\n      );\n      props.setCountryCode({\n        countryCode: _.where(props.countries, { name: event.target.value })[0]\n          .callingCodes,\n      });\n      formik.values.country = event.target.value;\n    }\n  };\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <select\n        {...field}\n        {...props}\n        onChange={onSelectCountry}\n        value={selectedCountry}\n      >\n        <option value=\"\">Select Country</option>\n        {props.countries.map((country) => (\n          <option key={country.name} value={country.name}>\n            {country.name}\n          </option>\n        ))}\n      </select>\n      {meta.touched && meta.error ? (\n        <div style={{ color: \"red\" }}>{meta.error}</div>\n      ) : null}\n      {selectedFlag && <img src={selectedFlag} alt={selectedCountry} />}\n    </>\n  );\n};\n\nexport default CountrySelect;\n"]},"metadata":{},"sourceType":"module"}