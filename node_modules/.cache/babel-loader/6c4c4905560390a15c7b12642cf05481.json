{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js\";\nimport React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\"; // const CustomTextInput = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <input className=\"text-input\" {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n// const CustomSelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst CustomForm = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Here is a form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameField, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        firstName: '',\n        middleName: '',\n        lastName: '',\n        country: '',\n        phoneNumber: null,\n        emailAddress: '',\n        favoriteColor: '',\n        comments: ''\n      },\n      validationSchema: Yup.object({\n        firstName: Yup.string().required(\"First Name is required\"),\n        middleName: Yup.string().notRequired(),\n        lastName: Yup.string().required(\"Last Name is required\"),\n        country: Yup.string().required(\"Country is required\"),\n        phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid').required(\"Phone Number is required\"),\n        emailAddress: Yup.string().email(\"Invalid Email Address\"),\n        favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n        comments: Yup.string().notRequired()\n      }),\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          resetForm();\n          setSubmitting(false);\n        }, 3000);\n      },\n      children: props => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Here's a Form!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"First Name\",\n          name: \"firstName\",\n          type: \"text\",\n          placeholder: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Middle Name\",\n          name: \"middleName\",\n          type: \"text\",\n          placeholder: \"Middle Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 118\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          type: \"text\",\n          placeholder: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 112\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          label: \"Country\",\n          name: \"country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Phone Number\",\n          name: \"phoneNumber\",\n          type: \"text\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 109\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Email Address\",\n          name: \"emailAddress\",\n          type: \"text\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Favorite Color\",\n          name: \"favoriteColor\",\n          type: \"text\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 113\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n          label: \"Comments\",\n          name: \"comments\",\n          type: \"text\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 101\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js"],"names":["React","NameField","Formik","useField","Form","Yup","CustomTextInput","CustomSelect","phoneRegExp","CustomForm","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","object","string","required","notRequired","matches","email","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\"\n\n// const CustomTextInput = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <input className=\"text-input\" {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\n// const CustomSelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst CustomForm = () => {\n  return (\n    <div>\n      <h1>Here is a form</h1>\n          <NameField />\n          <Formik\n              initialValues={{\n                  firstName:'',\n                  middleName:'',\n                  lastName:'',\n                  country:'',\n                  phoneNumber:null,\n                  emailAddress:'',\n                  favoriteColor:'',\n                  comments:''\n              }}\n              validationSchema={Yup.object({\n                  firstName: Yup.string()\n                    .required(\"First Name is required\"),\n                  middleName: Yup.string()\n                    .notRequired(),\n                  lastName: Yup.string()\n                    .required(\"Last Name is required\"),\n                  country: Yup.string()\n                    .required(\"Country is required\"),\n                  phoneNumber: Yup.string()\n                      .matches(phoneRegExp, 'Phone number is not valid')\n                      .required(\"Phone Number is required\"),\n                  emailAddress: Yup.string()\n                      .email(\"Invalid Email Address\"),\n                  favoriteColor: Yup.string()\n                      .required(\"Favorite Color is required\"),\n                  comments: Yup.string()\n                  .notRequired()\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      resetForm();\n                      setSubmitting(false);\n                  }, 3000)\n              }}\n          >\n              {props => (\n                  <Form>\n                      <h1>Here's a Form!</h1>\n                      <CustomTextInput label=\"First Name\" name=\"firstName\" type=\"text\" placeholder=\"First Name\" /><br />\n                      <CustomTextInput label=\"Middle Name\" name=\"middleName\" type=\"text\" placeholder=\"Middle Name\" /><br />\n                      <CustomTextInput label=\"Last Name\" name=\"lastName\" type=\"text\" placeholder=\"Last Name\" /><br />\n                      <CustomSelect label=\"Country\" name=\"country\" /><br />\n                      <CustomTextInput label=\"Phone Number\" name=\"phoneNumber\" type=\"text\" placeholder=\"\" /><br />\n                      <CustomTextInput label=\"Email Address\" name=\"emailAddress\" type=\"text\" placeholder=\"\" /><br />\n                      <CustomTextInput label=\"Favorite Color\" name=\"favoriteColor\" type=\"text\" placeholder=\"\" /><br />\n                      <CustomTextInput label=\"Comments\" name=\"comments\" type=\"text\" placeholder=\"\"/><br />\n                  </Form>\n              )}\n          </Formik>\n    </div>\n  );\n};\n\nexport default CustomForm;\n"]},"metadata":{},"sourceType":"module"}