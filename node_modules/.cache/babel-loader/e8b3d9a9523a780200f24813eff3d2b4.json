{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/ColorAutoCompleteField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\nimport { useFormikContext } from \"formik\";\nimport AutofillColors from \"../models/AutofillColors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ColorAutoCompleteField({ ...props\n}) {\n  _s();\n\n  const formik = useFormikContext();\n  const [hintData, setHintData] = useState(AutofillColors);\n  const [text, setText] = useState(formik.values.favoriteColor === \"\" ? formik.values.favoriteColor : \"\");\n\n  const handleOnBlur = e => {\n    formik.values.favoriteColor = e.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Hint, {\n      options: hintData,\n      allowTabFill: true,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-with-hint\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onBlur: e => handleOnBlur(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColorAutoCompleteField, \"UZCehXPtBmrHrfyxy3c61fN1TAE=\", false, function () {\n  return [useFormikContext];\n});\n\n_c = ColorAutoCompleteField;\nexport default ColorAutoCompleteField;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColorAutoCompleteField\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/ColorAutoCompleteField.js"],"names":["React","useState","Hint","useFormikContext","AutofillColors","ColorAutoCompleteField","props","formik","hintData","setHintData","text","setText","values","favoriteColor","handleOnBlur","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;;;AAEA,SAASC,sBAAT,CAAgC,EAAE,GAAGC;AAAL,CAAhC,EAA8C;AAAA;;AAC5C,QAAMC,MAAM,GAAGJ,gBAAgB,EAA/B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,cAAD,CAAxC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAC9BM,MAAM,CAACK,MAAP,CAAcC,aAAd,KAAgC,EAAhC,GAAqCN,MAAM,CAACK,MAAP,CAAcC,aAAnD,GAAmE,EADrC,CAAhC;;AAIA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BR,IAAAA,MAAM,CAACK,MAAP,CAAcC,aAAd,GAA8BE,CAAC,CAACC,MAAF,CAASC,KAAvC;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAET,QAAf;AAAyB,MAAA,YAAY,MAArC;AAAA,6BACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAEE,IAFT;AAGE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAIE,QAAA,MAAM,EAAGF,CAAD,IAAOD,YAAY,CAACC,CAAD;AAJ7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvBQV,sB;UACQF,gB;;;KADRE,sB;AAyBT,eAAeA,sBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Hint } from \"react-autocomplete-hint\";\nimport { useFormikContext } from \"formik\";\nimport AutofillColors from \"../models/AutofillColors\";\n\nfunction ColorAutoCompleteField({ ...props }) {\n  const formik = useFormikContext();\n  const [hintData, setHintData] = useState(AutofillColors);\n  const [text, setText] = useState(\n    formik.values.favoriteColor === \"\" ? formik.values.favoriteColor : \"\"\n  );\n\n  const handleOnBlur = (e) => {\n    formik.values.favoriteColor = e.target.value;\n  };\n\n  return (\n    <div>\n      <Hint options={hintData} allowTabFill>\n        <input\n          className=\"input-with-hint\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onBlur={(e) => handleOnBlur(e)}\n        />\n      </Hint>\n    </div>\n  );\n}\n\nexport default ColorAutoCompleteField;\n"]},"metadata":{},"sourceType":"module"}