{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CustomTextInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CustomTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n\n  const inputWidth = () => {\n    return props.countryCode ? \"100px\" : \"500px\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [props.countryCode && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: \"1\",\n          padding: \"10px\"\n        },\n        children: [\"(\", props.countryCode.countryCode, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          flex: \"1\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"text-input\",\n          ...field,\n          ...props,\n          style: {\n            width: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(CustomTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = CustomTextInput;\nexport default CustomTextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTextInput\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/FormComponents/CustomTextInput.js"],"names":["React","useField","CustomTextInput","label","props","field","meta","inputWidth","countryCode","id","name","display","flex","padding","width","touched","error","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;;AAEA,QAAMG,UAAU,GAAG,MAAM;AACvB,WAAOH,KAAK,CAACI,WAAN,GAAoB,OAApB,GAA8B,OAArC;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEJ,KAAK,CAACK,EAAN,IAAYL,KAAK,CAACM,IAAlC;AAAA,gBAAyCP;AAAzC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAE;AAAX,OAAb;AAAA,iBACGP,KAAK,CAACI,WAAN,iBACC;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE,GAAR;AAAaC,UAAAA,OAAO,EAAE;AAAtB,SAAb;AAAA,wBACIT,KAAK,CAACI,WAAN,CAAkBA,WADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,YADZ;AAAA,aAEMP,KAFN;AAAA,aAGMD,KAHN;AAIE,UAAA,KAAK,EAAE;AAAEU,YAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAiBGR,IAAI,CAACS,OAAL,IAAgBT,IAAI,CAACU,KAArB,gBACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA,gBAA+BX,IAAI,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,YADD,GAEG,IAnBN;AAAA,kBADF;AAuBD,CA9BD;;GAAMd,e;UACkBD,Q;;;KADlBC,e;AAgCN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { useField } from \"formik\";\n\nconst CustomTextInput = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  const inputWidth = () => {\n    return props.countryCode ? \"100px\" : \"500px\";\n  };\n\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <span style={{ display: \"flex\" }}>\n        {props.countryCode && (\n          <span style={{ flex: \"1\", padding: \"10px\" }}>\n            ({props.countryCode.countryCode})\n          </span>\n        )}\n        <span style={{ flex: \"1\" }}>\n          <input\n            className=\"text-input\"\n            {...field}\n            {...props}\n            style={{ width: \"10px\" }}\n          />\n        </span>\n      </span>\n      {meta.touched && meta.error ? (\n        <div style={{ color: \"red\" }}>{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nexport default CustomTextInput;\n"]},"metadata":{},"sourceType":"module"}