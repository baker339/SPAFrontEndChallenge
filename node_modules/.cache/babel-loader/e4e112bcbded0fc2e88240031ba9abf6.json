{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js\";\nimport React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\";\nimport { Styles } from \"../../Styles\"; // const CustomTextInput = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <input className=\"text-input\" {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n// const CustomSelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nconst CustomForm = () => {\n  return /*#__PURE__*/_jsxDEV(Styles, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Here is a form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NameField, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          firstName: '',\n          middleName: '',\n          lastName: '',\n          country: '',\n          phoneNumber: '',\n          emailAddress: '',\n          favoriteColor: '',\n          comments: ''\n        },\n        validationSchema: Yup.object({\n          firstName: Yup.string().required(\"First Name is required\"),\n          middleName: Yup.string().notRequired(),\n          lastName: Yup.string().required(\"Last Name is required\"),\n          country: Yup.string().required(\"Country is required\"),\n          phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid').required(\"Phone Number is required\"),\n          emailAddress: Yup.string().email(\"Invalid Email Address\"),\n          favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n          comments: Yup.string().notRequired()\n        }),\n        onSubmit: (values, {\n          setSubmitting,\n          resetForm\n        }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 3000);\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Here's a Form!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"First Name\",\n            name: \"firstName\",\n            type: \"text\",\n            placeholder: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 115\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Middle Name\",\n            name: \"middleName\",\n            type: \"text\",\n            placeholder: \"Middle Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 118\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Last Name\",\n            name: \"lastName\",\n            type: \"text\",\n            placeholder: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 112\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            label: \"Country\",\n            name: \"country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 70\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Phone Number\",\n            name: \"phoneNumber\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 109\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Email Address\",\n            name: \"emailAddress\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 111\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Favorite Color\",\n            name: \"favoriteColor\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 113\n          }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n            label: \"Comments\",\n            name: \"comments\",\n            type: \"text\",\n            placeholder: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 108\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js"],"names":["React","NameField","Formik","useField","Form","Yup","CustomTextInput","CustomSelect","Styles","phoneRegExp","CustomForm","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","object","string","required","notRequired","matches","email","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","props","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NameField from \"./FormComponents/NameField\";\nimport { Formik, useField, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\"\nimport { Styles } from \"../../Styles\";\n\n// const CustomTextInput = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <input className=\"text-input\" {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\n// const CustomSelect = ({ label, ...props }) => {\n//     const [field, meta] = useField(props);\n\n//     return (\n//         <>\n//             <label htmlFor={props.id || props.name}>{label}</label>\n//             <select {...field} {...props} />\n//             {meta.touched && meta.error ? (\n//                 <div>{ meta.error }</div>) : null\n//             }\n//         </>\n//     )\n// }\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\nconst CustomForm = () => {\n    return (\n      <Styles>\n    <div>\n      <h1>Here is a form</h1>\n          <NameField />\n          <Formik\n              initialValues={{\n                  firstName:'',\n                  middleName:'',\n                  lastName:'',\n                  country:'',\n                  phoneNumber:'',\n                  emailAddress:'',\n                  favoriteColor:'',\n                  comments:''\n              }}\n              validationSchema={Yup.object({\n                  firstName: Yup.string()\n                    .required(\"First Name is required\"),\n                  middleName: Yup.string()\n                    .notRequired(),\n                  lastName: Yup.string()\n                    .required(\"Last Name is required\"),\n                  country: Yup.string()\n                    .required(\"Country is required\"),\n                  phoneNumber: Yup.string()\n                      .matches(phoneRegExp, 'Phone number is not valid')\n                      .required(\"Phone Number is required\"),\n                  emailAddress: Yup.string()\n                      .email(\"Invalid Email Address\"),\n                  favoriteColor: Yup.string()\n                      .required(\"Favorite Color is required\"),\n                  comments: Yup.string()\n                  .notRequired()\n              })}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                  setTimeout(() => {\n                      alert(JSON.stringify(values, null, 2));\n                      resetForm();\n                      setSubmitting(false);\n                  }, 3000)\n              }}\n          >\n              {props => (\n                  <Form>\n                      <h1>Here's a Form!</h1>\n                      <CustomTextInput label=\"First Name\" name=\"firstName\" type=\"text\" placeholder=\"First Name\" /><br />\n                      <CustomTextInput label=\"Middle Name\" name=\"middleName\" type=\"text\" placeholder=\"Middle Name\" /><br />\n                      <CustomTextInput label=\"Last Name\" name=\"lastName\" type=\"text\" placeholder=\"Last Name\" /><br />\n                      <CustomSelect label=\"Country\" name=\"country\" /><br />\n                      <CustomTextInput label=\"Phone Number\" name=\"phoneNumber\" type=\"text\" placeholder=\"\" /><br />\n                      <CustomTextInput label=\"Email Address\" name=\"emailAddress\" type=\"text\" placeholder=\"\" /><br />\n                      <CustomTextInput label=\"Favorite Color\" name=\"favoriteColor\" type=\"text\" placeholder=\"\" /><br />\n                            <CustomTextInput label=\"Comments\" name=\"comments\" type=\"text\" placeholder=\"\" /><br />\n                            <button type=\"submit\">{props.isSubmitting ? \"Loading...\" : \"Submit\" }</button>\n                  </Form>\n              )}\n          </Formik>\n            </div>\n            </Styles>\n  );\n};\n\nexport default CustomForm;\n"]},"metadata":{},"sourceType":"module"}