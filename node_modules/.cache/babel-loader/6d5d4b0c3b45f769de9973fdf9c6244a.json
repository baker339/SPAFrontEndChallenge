{"ast":null,"code":"var _jsxFileName = \"/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\";\nimport { Styles } from \"../../Styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nexport default class CustomForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true,\n      countries: null\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      countries: data\n    });\n    console.log(this.state.countries);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            firstName: \"\",\n            middleName: \"\",\n            lastName: \"\",\n            country: \"\",\n            phoneNumber: \"\",\n            emailAddress: \"\",\n            favoriteColor: \"\",\n            comments: \"\"\n          },\n          validationSchema: Yup.object({\n            firstName: Yup.string().required(\"First Name is required\"),\n            middleName: Yup.string().notRequired(),\n            lastName: Yup.string().required(\"Last Name is required\"),\n            country: Yup.string().required(\"Country is required\").oneOf(this.state.countries.name),\n            phoneNumber: Yup.string().matches(phoneRegExp, \"Phone number is not valid\").required(\"Phone Number is required\"),\n            emailAddress: Yup.string().email(\"Invalid Email Address\"),\n            favoriteColor: Yup.string().required(\"Favorite Color is required\"),\n            comments: Yup.string().notRequired()\n          }),\n          onSubmit: (values, {\n            setSubmitting,\n            resetForm\n          }) => {\n            setTimeout(() => {\n              alert(JSON.stringify(values, null, 2));\n              resetForm();\n              setSubmitting(false);\n            }, 3000);\n          },\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Here's a Form!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"First Name\",\n              name: \"firstName\",\n              type: \"text\",\n              placeholder: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Middle Name\",\n              name: \"middleName\",\n              type: \"text\",\n              placeholder: \"Middle Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              type: \"text\",\n              placeholder: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              label: \"Country\",\n              name: \"country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Phone Number\",\n              name: \"phoneNumber\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Email Address\",\n              name: \"emailAddress\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Favorite Color\",\n              name: \"favoriteColor\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextInput, {\n              label: \"Comments\",\n              name: \"comments\",\n              type: \"text\",\n              placeholder: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: props.isSubmitting ? \"Loading...\" : \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/aidanbaker/Desktop/spa-frontend-challenge/src/components/Form/CustomForm.js"],"names":["React","useEffect","useState","Formik","Form","Yup","CustomTextInput","CustomSelect","Styles","phoneRegExp","CustomForm","Component","state","loading","countries","componentDidMount","url","response","fetch","data","json","setState","console","log","render","firstName","middleName","lastName","country","phoneNumber","emailAddress","favoriteColor","comments","object","string","required","notRequired","oneOf","name","matches","email","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","props","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport CustomTextInput from \"./FormComponents/CustomTextInput\";\nimport CustomSelect from \"./FormComponents/CustomSelect\";\nimport { Styles } from \"../../Styles\";\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\nexport default class CustomForm extends React.Component {\n  state = {\n    loading: true,\n    countries: null,\n  };\n\n  async componentDidMount() {\n    const url = \"https://restcountries.eu/rest/v2/all\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ countries: data });\n    console.log(this.state.countries);\n  }\n\n  render() {\n    return (\n      <Styles>\n        <div>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              middleName: \"\",\n              lastName: \"\",\n              country: \"\",\n              phoneNumber: \"\",\n              emailAddress: \"\",\n              favoriteColor: \"\",\n              comments: \"\",\n            }}\n            validationSchema={Yup.object({\n              firstName: Yup.string().required(\"First Name is required\"),\n              middleName: Yup.string().notRequired(),\n              lastName: Yup.string().required(\"Last Name is required\"),\n              country: Yup.string()\n                .required(\"Country is required\")\n                .oneOf(this.state.countries.name),\n              phoneNumber: Yup.string()\n                .matches(phoneRegExp, \"Phone number is not valid\")\n                .required(\"Phone Number is required\"),\n              emailAddress: Yup.string().email(\"Invalid Email Address\"),\n              favoriteColor: Yup.string().required(\n                \"Favorite Color is required\"\n              ),\n              comments: Yup.string().notRequired(),\n            })}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              setTimeout(() => {\n                alert(JSON.stringify(values, null, 2));\n                resetForm();\n                setSubmitting(false);\n              }, 3000);\n            }}\n          >\n            {(props) => (\n              <Form>\n                <h1>Here's a Form!</h1>\n                <CustomTextInput\n                  label=\"First Name\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  placeholder=\"First Name\"\n                />\n                <br />\n                <CustomTextInput\n                  label=\"Middle Name\"\n                  name=\"middleName\"\n                  type=\"text\"\n                  placeholder=\"Middle Name\"\n                />\n                <br />\n                <CustomTextInput\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  placeholder=\"Last Name\"\n                />\n                <br />\n                <CustomSelect label=\"Country\" name=\"country\" />\n                <br />\n                <CustomTextInput\n                  label=\"Phone Number\"\n                  name=\"phoneNumber\"\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n                <br />\n                <CustomTextInput\n                  label=\"Email Address\"\n                  name=\"emailAddress\"\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n                <br />\n                <CustomTextInput\n                  label=\"Favorite Color\"\n                  name=\"favoriteColor\"\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n                <br />\n                <CustomTextInput\n                  label=\"Comments\"\n                  name=\"comments\"\n                  type=\"text\"\n                  placeholder=\"\"\n                />\n                <br />\n                <button type=\"submit\">\n                  {props.isSubmitting ? \"Loading...\" : \"Submit\"}\n                </button>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </Styles>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}